[{"D:\\React\\reactproject2\\src\\index.js":"1","D:\\React\\reactproject2\\src\\reportWebVitals.js":"2","D:\\React\\reactproject2\\src\\App.js":"3","D:\\React\\reactproject2\\src\\Components\\MenuComponents.js":"4","D:\\React\\reactproject2\\src\\Components\\DishdetailComponent.js":"5","D:\\React\\reactproject2\\src\\shared\\dishes.js":"6","D:\\React\\reactproject2\\src\\Components\\MainComponents.js":"7","D:\\React\\reactproject2\\src\\Components\\FooterComponent.js":"8","D:\\React\\reactproject2\\src\\Components\\HeaderComponent.js":"9","D:\\React\\reactproject2\\src\\Components\\HomeComponent.js":"10","D:\\React\\reactproject2\\src\\Components\\ContactComponent.js":"11","D:\\React\\reactproject2\\src\\shared\\comments.js":"12","D:\\React\\reactproject2\\src\\shared\\promotions.js":"13","D:\\React\\reactproject2\\src\\shared\\leaders.js":"14","D:\\React\\reactproject2\\src\\Components\\AboutComponent.js":"15","D:\\React\\reactproject2\\src\\redux\\configureStore.js":"16","D:\\React\\reactproject2\\src\\Components\\CommentformComponent.js":"17","D:\\React\\reactproject2\\src\\redux\\comments.js":"18","D:\\React\\reactproject2\\src\\redux\\leaders.js":"19","D:\\React\\reactproject2\\src\\redux\\promotions.js":"20","D:\\React\\reactproject2\\src\\redux\\dishes.js":"21","D:\\React\\reactproject2\\src\\redux\\ActionTypes.js":"22","D:\\React\\reactproject2\\src\\redux\\ActionCreators.js":"23","D:\\React\\reactproject2\\src\\Components\\LoadingComponent.js":"24","D:\\React\\reactproject2\\src\\redux\\forms.js":"25","D:\\React\\reactproject2\\src\\shared\\baseUrl.js":"26"},{"size":590,"mtime":1608309868000,"results":"27","hashOfConfig":"28"},{"size":362,"mtime":499162500000,"results":"29","hashOfConfig":"28"},{"size":540,"mtime":1608650550000,"results":"30","hashOfConfig":"28"},{"size":2366,"mtime":1609151672000,"results":"31","hashOfConfig":"28"},{"size":3807,"mtime":1609255446888,"results":"32","hashOfConfig":"28"},{"size":1503,"mtime":1608442366000,"results":"33","hashOfConfig":"28"},{"size":4094,"mtime":1609348858866,"results":"34","hashOfConfig":"28"},{"size":2639,"mtime":1608353024000,"results":"35","hashOfConfig":"28"},{"size":5080,"mtime":1608823346000,"results":"36","hashOfConfig":"28"},{"size":2018,"mtime":1609257152385,"results":"37","hashOfConfig":"28"},{"size":11209,"mtime":1609352594331,"results":"38","hashOfConfig":"28"},{"size":4279,"mtime":1608441587498,"results":"39","hashOfConfig":"28"},{"size":453,"mtime":1608442423925,"results":"40","hashOfConfig":"28"},{"size":2382,"mtime":1609225324000,"results":"41","hashOfConfig":"28"},{"size":4228,"mtime":1609261272562,"results":"42","hashOfConfig":"28"},{"size":877,"mtime":1609347851818,"results":"43","hashOfConfig":"28"},{"size":4331,"mtime":1609520982569,"results":"44","hashOfConfig":"28"},{"size":539,"mtime":1609226158000,"results":"45","hashOfConfig":"28"},{"size":674,"mtime":1609258065620,"results":"46","hashOfConfig":"28"},{"size":683,"mtime":1609151528000,"results":"47","hashOfConfig":"28"},{"size":598,"mtime":1609084880000,"results":"48","hashOfConfig":"28"},{"size":693,"mtime":1609335377336,"results":"49","hashOfConfig":"28"},{"size":7071,"mtime":1609346891095,"results":"50","hashOfConfig":"28"},{"size":256,"mtime":1609076694000,"results":"51","hashOfConfig":"28"},{"size":721,"mtime":1609335600922,"results":"52","hashOfConfig":"28"},{"size":48,"mtime":1609151528000,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"bk783r",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"56"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"D:\\React\\reactproject2\\src\\index.js",[],["111","112"],"D:\\React\\reactproject2\\src\\reportWebVitals.js",[],"D:\\React\\reactproject2\\src\\App.js",[],"D:\\React\\reactproject2\\src\\Components\\MenuComponents.js",[],"D:\\React\\reactproject2\\src\\Components\\DishdetailComponent.js",[],"D:\\React\\reactproject2\\src\\shared\\dishes.js",[],"D:\\React\\reactproject2\\src\\Components\\MainComponents.js",[],"D:\\React\\reactproject2\\src\\Components\\FooterComponent.js",[],"D:\\React\\reactproject2\\src\\Components\\HeaderComponent.js",[],"D:\\React\\reactproject2\\src\\Components\\HomeComponent.js",[],"D:\\React\\reactproject2\\src\\Components\\ContactComponent.js",["113","114","115","116","117","118","119","120","121"],"import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem,\r\n    Button, Row, Col, Label } from 'reactstrap';\r\n    import { Control, Form, Errors, actions } from 'react-redux-form';\r\nimport { Link } from 'react-router-dom';\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\n\r\n    class Contact extends Component {\r\n        \r\n\r\n            constructor(props) {\r\n                super(props);\r\n        \r\n                this.state = {\r\n               \r\n                }\r\n                this.handleSubmit = this.handleSubmit.bind(this);\r\n                \r\n            }\r\n            handleSubmit(values) {\r\n            \r\n\r\n                this.props.postFeedback(values.firstname, values.lastname, values.telnum, values.email,values.agree,values.contactType,values.message);\r\n          \r\n                this.props.resetFeedbackForm();\r\n                this.props.fetchFeedback();\r\n                \r\n                alert(JSON.stringify(this.props.feedbacks))\r\n                // event.preventDefault();\r\n            }\r\n        \r\n        \r\n        render() {\r\n           \r\n    return(\r\n        <div className=\"container\">\r\n         <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>Contact Us</h3>\r\n                    <hr />\r\n                </div>                \r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                <h3>Location Information</h3>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                        121, Clear Water Bay Road<br />\r\n                        Clear Water Bay, Kowloon<br />\r\n                        HONG KONG<br />\r\n                        <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                        <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                        <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                        </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                    <h5>Map of our Location</h5>\r\n                </div>\r\n                <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                    <div className=\"btn-group\" role=\"group\">\r\n                        <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                        <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                        <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                   <div className=\"col-12\">\r\n                      <h3>Send us your Feedback</h3>\r\n                   </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                    <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                    <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                                 /> {' '}\r\n                                                <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                         \r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                    Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n               </div>\r\n        </div>\r\n    );\r\n    }\r\n    }\r\nexport default Contact;","D:\\React\\reactproject2\\src\\shared\\comments.js",[],["122","123"],"D:\\React\\reactproject2\\src\\shared\\promotions.js",[],"D:\\React\\reactproject2\\src\\shared\\leaders.js",[],["124","125"],"D:\\React\\reactproject2\\src\\Components\\AboutComponent.js",[],"D:\\React\\reactproject2\\src\\redux\\configureStore.js",[],"D:\\React\\reactproject2\\src\\Components\\CommentformComponent.js",["126","127","128","129","130","131"],"D:\\React\\reactproject2\\src\\redux\\comments.js",[],"D:\\React\\reactproject2\\src\\redux\\leaders.js",[],"D:\\React\\reactproject2\\src\\redux\\promotions.js",[],"D:\\React\\reactproject2\\src\\redux\\dishes.js",[],"D:\\React\\reactproject2\\src\\redux\\ActionTypes.js",[],"D:\\React\\reactproject2\\src\\redux\\ActionCreators.js",["132"],"import * as ActionTypes from './ActionTypes';\r\nimport { DISHES } from '../shared/dishes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nexport const addComment = (comment) => ({\r\n  type: ActionTypes.ADD_COMMENT,\r\n  payload: comment\r\n});\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n\r\n  const newComment = {\r\n      dishId: dishId,\r\n      rating: rating,\r\n      author: author,\r\n      comment: comment\r\n  };\r\n  newComment.date = new Date().toISOString();\r\n  \r\n  return fetch(baseUrl + 'comments', {\r\n      method: \"POST\",\r\n      body: JSON.stringify(newComment),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      credentials: \"same-origin\"\r\n  })\r\n  .then(response => {\r\n      if (response.ok) {\r\n        return response;\r\n      } else {\r\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n        error.response = response;\r\n        throw error;\r\n      }\r\n    },\r\n    error => {\r\n          throw error;\r\n    })\r\n  .then(response => response.json())\r\n  .then(response => dispatch(addComment(response)))\r\n  .catch(error =>  { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: '+error.message); });\r\n};\r\n\r\n\r\n\r\n\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n\r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(dishes => dispatch(addDishes(dishes)))\r\n    .catch(error => dispatch(dishesFailed(error.message)));\r\n}\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\nexport const fetchComments = () => (dispatch) => {    \r\n    return fetch(baseUrl + 'comments')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(comments => dispatch(addComments(comments)))\r\n    .catch(error => dispatch(commentsFailed(error.message)));\r\n};\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n    \r\n    dispatch(promosLoading());\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(promos => dispatch(addPromos(promos)))\r\n    .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\nexport const fetchLeaders = () => (dispatch) => {\r\n    \r\n  dispatch(leadersLoading());\r\n\r\n  return fetch(baseUrl + 'leaders')\r\n  .then(response => {\r\n      if (response.ok) {\r\n        return response;\r\n      } else {\r\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n        error.response = response;\r\n        throw error;\r\n      }\r\n    },\r\n    error => {\r\n          var errmess = new Error(error.message);\r\n          throw errmess;\r\n    })\r\n  .then(response => response.json())\r\n  .then(leaders => dispatch(addLeaders(leaders)))\r\n  .catch(error => dispatch(leadersFailed(error.message)));\r\n}\r\n\r\nexport const leadersLoading = () => ({\r\n  type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n  type: ActionTypes.LEADERS_FAILED,\r\n  payload: errmess\r\n});\r\nexport const addLeaders = (leaders) => ({\r\n  type: ActionTypes.ADD_LEADERS,\r\n  payload: leaders\r\n});\r\n\r\n\r\n\r\nexport const postFeedback = (firstname, lastname, telnum, email,agree,contactType,message) => (dispatch) => {\r\n\r\n  const newFeedback = {\r\n    firstname: firstname,\r\n    lastname: lastname,\r\n    telnum:telnum,\r\n    email: email,\r\n    agree: agree,\r\n    contactType: contactType,\r\n    message:message\r\n};\r\nnewFeedback.date = new Date().toISOString(); \r\n  \r\n  return fetch(baseUrl + 'feedback', {\r\n      method: \"POST\",\r\n      body: JSON.stringify(newFeedback),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      credentials: \"same-origin\"\r\n  })\r\n  .then(response => {\r\n      if (response.ok) {\r\n        return response;\r\n      } else {\r\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n        error.response = response;\r\n        throw error;\r\n      }\r\n    },\r\n    error => {\r\n          throw error;\r\n    })\r\n  .then(response => response.json())\r\n  .then(response => dispatch(addFeedback(response)))\r\n  .catch(error =>  { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: '+error.message); });\r\n};\r\nexport const addFeedback = (feedback) => ({\r\n  type: ActionTypes.ADD_FEEDBACK,\r\n  payload: feedback\r\n});\r\n\r\n\r\n\r\n\r\nexport const fetchFeedback = () => (dispatch) => {\r\n\r\n  return fetch(baseUrl + 'feedback')\r\n  .then(response => {\r\n      if (response.ok) {\r\n        return response;\r\n      } else {\r\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n        error.response = response;\r\n        throw error;\r\n      }\r\n    },\r\n    error => {\r\n          var errmess = new Error(error.message);\r\n          throw errmess;\r\n    })\r\n  .then(response => response.json())\r\n  .then(feedbacks => dispatch(feedbackFetch(feedbacks)))\r\n  .catch(error => dispatch(feedbackFailed(error.message)));\r\n}\r\n\r\n\r\nexport const feedbackFailed = (errmess) => ({\r\n  type: ActionTypes.FEEDBACK_FAILED,\r\n  payload: errmess\r\n});\r\nexport const feedbackFetch = (feedbacks) => ({\r\n  type: ActionTypes.FEEDBACK_FETCH,\r\n  payload: feedbacks\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","D:\\React\\reactproject2\\src\\Components\\LoadingComponent.js",[],"D:\\React\\reactproject2\\src\\redux\\forms.js",[],"D:\\React\\reactproject2\\src\\shared\\baseUrl.js",[],{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","severity":1,"message":"138","line":4,"column":37,"nodeType":"139","messageId":"140","endLine":4,"endColumn":44},{"ruleId":"141","severity":1,"message":"142","line":73,"column":25,"nodeType":"143","endLine":73,"endColumn":67},{"ruleId":"144","severity":1,"message":"145","line":87,"column":37,"nodeType":"143","endLine":93,"endColumn":44},{"ruleId":"144","severity":1,"message":"145","line":109,"column":37,"nodeType":"143","endLine":115,"endColumn":44},{"ruleId":"144","severity":1,"message":"145","line":131,"column":37,"nodeType":"143","endLine":137,"endColumn":44},{"ruleId":"144","severity":1,"message":"145","line":154,"column":37,"nodeType":"143","endLine":160,"endColumn":44},{"ruleId":"144","severity":1,"message":"146","line":176,"column":45,"nodeType":"143","endLine":178,"endColumn":52},{"ruleId":"144","severity":1,"message":"147","line":184,"column":37,"nodeType":"143","endLine":185,"endColumn":66},{"ruleId":"144","severity":1,"message":"148","line":195,"column":37,"nodeType":"143","endLine":197,"endColumn":68},{"ruleId":"133","replacedBy":"149"},{"ruleId":"135","replacedBy":"150"},{"ruleId":"133","replacedBy":"151"},{"ruleId":"135","replacedBy":"152"},{"ruleId":"137","severity":1,"message":"153","line":2,"column":80,"nodeType":"139","messageId":"140","endLine":2,"endColumn":85},{"ruleId":"137","severity":1,"message":"154","line":2,"column":86,"nodeType":"139","messageId":"140","endLine":2,"endColumn":89},{"ruleId":"137","severity":1,"message":"155","line":2,"column":90,"nodeType":"139","messageId":"140","endLine":2,"endColumn":93},{"ruleId":"144","severity":1,"message":"147","line":47,"column":33,"nodeType":"143","endLine":48,"endColumn":67},{"ruleId":"144","severity":1,"message":"145","line":58,"column":33,"nodeType":"143","endLine":63,"endColumn":45},{"ruleId":"144","severity":1,"message":"148","line":77,"column":33,"nodeType":"143","endLine":79,"endColumn":67},{"ruleId":"137","severity":1,"message":"156","line":2,"column":10,"nodeType":"139","messageId":"140","endLine":2,"endColumn":16},"no-native-reassign",["157"],"no-negated-in-lhs",["158"],"no-unused-vars","'actions' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react/jsx-pascal-case","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE",["157"],["158"],["157"],["158"],"'Input' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'DISHES' is defined but never used.","no-global-assign","no-unsafe-negation"]